// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should flatten a complex object 1`] = `
Object {
  "baz.0.0": 1,
  "baz.0.1": 2,
  "baz.1.0": 3,
  "baz.1.1": 4,
  "baz.2.0.test.0": 4,
  "baz.2.0.test.1": 5,
  "baz.2.0.test.2.5": 6,
  "foo": "bar",
  "instances.0.name": "dog",
  "instances.1.name": "cat",
}
`;

exports[`should handle mutliple stages 1`] = `
"AWSTemplateFormatVersion: '2010-09-09'
dog:
  Type: AWS::EC2::Instance
  Properties:
    Size: big
    Cidr: 0.1.1.1
  Tags: 
    Name: tagname
    Value: tagval
cat:
  Type: AWS::EC2::Instance
  Properties:
    Size: real big
    Cidr: 0.2.2.2
  Tags: 
    Name: tagname2
    Value: tagval2
Resources:
  dog:
    Type: AWS::EC2::Instance
    Properties:
      Size: big
      Cidr: 0.1.1.1
    Tags: 
      Name: tagname
      Value: tagval
  cat:
    Type: AWS::EC2::Instance
    Properties:
      Size: real big
      Cidr: 0.2.2.2
    Tags: 
      Name: tagname2
      Value: tagval2
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - dog:
          Type: AWS::EC2::Instance
          Properties:
            Size: big
            Cidr: 0.1.1.1
          Tags: 
            Name: tagname
            Value: tagval
      - cat:
          Type: AWS::EC2::Instance
          Properties:
            Size: real big
            Cidr: 0.2.2.2
          Tags: 
            Name: tagname2
            Value: tagval2
      - Endpoint:
          Ref: https
        Protocol: https
      - Foo:
          Bar: bazval
          Dog: catval
      - Foo:
          Bar: mapbaz
          Dog: mapcat
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the ELB
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
Outputs:
  ELBDNSName:
    Description: ELB DNS Name
    Value:
      Fn::GetAtt:
      - ElasticLoadBalancer
      - DNSName"
`;

exports[`should have a cli interface that works 1`] = `
"AWSTemplateFormatVersion: '2010-09-09'
dog:
  Type: AWS::EC2::Instance
  Properties:
    Size: big
    Cidr: 0.1.1.1
  Tags: 
    Name: tagname
    Value: tagval
cat:
  Type: AWS::EC2::Instance
  Properties:
    Size: real big
    Cidr: 0.2.2.2
  Tags: 
    Name: tagname2
    Value: tagval2
Resources:
  dog:
    Type: AWS::EC2::Instance
    Properties:
      Size: big
      Cidr: 0.1.1.1
    Tags: 
      Name: tagname
      Value: tagval
  cat:
    Type: AWS::EC2::Instance
    Properties:
      Size: real big
      Cidr: 0.2.2.2
    Tags: 
      Name: tagname2
      Value: tagval2
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - dog:
          Type: AWS::EC2::Instance
          Properties:
            Size: big
            Cidr: 0.1.1.1
          Tags: 
            Name: tagname
            Value: tagval
      - cat:
          Type: AWS::EC2::Instance
          Properties:
            Size: real big
            Cidr: 0.2.2.2
          Tags: 
            Name: tagname2
            Value: tagval2
      - Endpoint:
          Ref: https
        Protocol: https
      - Foo:
          Bar: bazval
          Dog: catval
      - Foo:
          Bar: mapbaz
          Dog: mapcat
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the ELB
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
Outputs:
  ELBDNSName:
    Description: ELB DNS Name
    Value:
      Fn::GetAtt:
      - ElasticLoadBalancer
      - DNSName"
`;

exports[`should update var paths 1`] = `
"
  {{instances.0.name}}:
  Type: AWS::EC2::Instance
  Properties:
    Size: {{instances.0.size}}
    Cidr: {{instances.0.cidr}}
  Tags: {{instances.0, file:subTemplates/subSubTemplates/tags.yaml}}
  Foo: {{for:instances.0.tags, file:subTemplates/subSubTemplates/tags.yaml}}
  "
`;
